"""
    Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# Input parameters:
- `limit` : Upper limit for the numbers.

# Examples/Tests:
```julia
problem_002(10)         # returns 10
problem_002(4_000_000)  # returns 4613732
problem_002(-1)         # throws DomainError
```

# Reference
- https://projecteuler.net/problem=2

Contributed by: [Praneeth Jain](https://www.github.com/PraneethJain)
"""
function problem_002(limit::Int)
    limit <= 1 && throw(DomainError("limit must be integer greater than 1"))
    a, b = 1, 2
    even_fib_sum = 0
    while b <= limit
        if iseven(b)
            even_fib_sum += b
        end
        a, b = b, a + b
    end
    return even_fib_sum
end
